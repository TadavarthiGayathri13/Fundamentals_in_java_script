1) JavaScript and it’s role in web development:
                                          JavaScript is a versatile programming language commonly used for web development. It enables interactive and dynamic content on websites, allowing clint side
Scripts to interact with user, alter the document content, and communicate with servers.
JavaScript role in web development:
* JavaScript plays a crucial role in web development by providing client-side functionality.
* It allows developers to create dynamic and interactive user interface, handle user input, and update content on a webpage without requiring a full page reload.
* JavaScript is often used in conjunction with HTML and CSS to create responsive web applications.
* It can also be employed on the sever-side (Node.js) for building efficient backend systems.
Overall, JavaScript is a fundamental technology for modern web development.


3) primitive datatypes:
In JavaScript there are two types of datatypes 
1) PRIMITIVE  2) NON-PRIMITIVE 
Here, are five types of data types,
Number: Represents numeric values, including integers and floating -point numbers.
String: Represents sequence of characters and is used for text. Enclosed with single or double quotes.
Boolean: Represents logical entity and has only two values: true or false.
Undefined: Represents a variable that has been declared but not assigned a value.
Null: Represents the intentional absence of any object value.


4)purpose of declaring variables in JS:
The purpose of declaring variables in JS is to store and manage data. Variables allow you to name a piece of data and manipulate it throughout your code. They provide a way to store Information and retrieve it later.
In JS we can declare variables using let keyword. Here is an example:
Let myVariable = “Hello, everyone”;
Here,
* Let is the keyword used to declare the variable.
* myVariable is the name of the variable.
* = is the assignment operator used to assign the value to the variable. 

  5)Comments in JavaScript:
      Comments in JS is essential for enhancing code readability, explaining functionality. They are not executed by the JS engine and serve as annotations within the code. Using comments helps document your code, making it easier for others to understand the purpose and functionality of different parts of the code.
There are two types of comments 
1)single-line comments 2) multi-line comments
* // single-line comments: This is a comment for a single line of a code.

* /* 
                     Multi-line comments:
                    You can use this type of 
                    Comments for longer explanations. 
                  */

6) Importance of choosing meaningful and descriptive variable names:
  Choosing meaningful and descriptive variable names in JS is crucial for code readability and maintainability. Making it easier for developers to understand the code and reduce the chances of introducing bugs during development.
Consider this example:
// unclear variable names
Let a = 10;  
let b =5 ;
let c = a + b;
// clear and descriptive variable names 
Let numberOfApples = 10;
Let numberOfOranges = 5;
Let totalFruits = numberOfApples + numberOf Oranges;
       In the first set of variables a,b, and c provide little information about their purpose. However in the second set clearly indicate what each variable represents ,improving code readability.


1) Role of operators in JavaScript:
Operators in JavaScript perform operations on variable names and values. They are essential in programming because they are enabling you to manipulate and perform calculations on data.
Operators provide the building blocks for expressing logic and making decisions within a program.
  For example,

* arithmetic operators (+, -, *, /) allow you to perform mathematical operations.

* Comparison operators (==, !=, <, >) help in making decisions based on conditions .

* Logical operators (&&, or) are used to combine and manipulate Boolean values.

4)Precedence and associative:
 In JS, operator precedence determines the order in which operators are evaluated in an expression, while associativity defines the grouping of operands with the same precedence.
      Understanding these concepts is crucial for predicting how expressions will be evaluated and ensuring the intended logic in your code.
   For Example, 
     In the expression a + b *c, the * operator has higher precedence than +, so b+ c is evaluated first. If you want a+ b to be evaluated first, you need to use parenthesis (a + b) * c.
 Associative matters when operators with the same precedence appear in an expression. For left-associative operators, like + or-, evaluation proceeds from left to right. Right-associative operator =, evaluation occurs from right to left.


2) Difference between unary, binary, ternary:
* Unary operators: 
     Unary operators work with only one operand. Here are examples of unary operators in JS:
 Unary Plus:
    Let X = 5;
   Let Y = +X; // Y is now 5
 Unary Negation:
 Let X = 5;
  Let Y = -X; // Y is now -5 
Logical Not(!):
Let X = true;
Let Y =! X //Y is now false
* Binary Operators:
 These operate on two operands. 
  Example:
 Let a = 5;
Let b = 3;
Let sum = a + b; // sum is now 8
* Ternary Operator:
                         Also called Conditional Operator. it takes three operands and returns a value based on a condition.
 Let age = 18;
Let status = (age >= 18) ? ‘Adult’ : ‘Minor’;
// status is ‘Adult’ if age is 18 or order ,otherwise ‘minor’
 

  






